To honour the JVM settings for this build a single-use Daemon process will be forked. For more on this, please refer to https://docs.gradle.org/8.5/userguide/gradle_daemon.html#sec:disabling_the_daemon in the Gradle documentation.
Daemon will be stopped at the end of the build 

> Configure project :
The 'sonarqube' task depends on compile tasks. This behavior is now deprecated and will be removed in version 5.x. To avoid implicit compilation, set property 'sonar.gradle.skipCompile' to 'true' and make sure your project is compiled, before analysis has started.
The 'sonar' task depends on compile tasks. This behavior is now deprecated and will be removed in version 5.x. To avoid implicit compilation, set property 'sonar.gradle.skipCompile' to 'true' and make sure your project is compiled, before analysis has started.

FAILURE: Build failed with an exception.

* What went wrong:
Task 'lint' not found in root project 'UQ CSSE3200 2025 Studio 4' and its subprojects. Some candidates are: 'dist', 'init'.

* Try:
> Run gradlew tasks to get a list of available tasks.
> For more on name expansion, please refer to https://docs.gradle.org/8.5/userguide/command_line_interface.html#sec:name_abbreviation in the Gradle documentation.
> Run with --stacktrace option to get the stack trace.
> Run with --info or --debug option to get more log output.
> Run with --scan to get full insights.
> Get more help at https://help.gradle.org.

BUILD FAILED in 2s
To honour the JVM settings for this build a single-use Daemon process will be forked. For more on this, please refer to https://docs.gradle.org/8.5/userguide/gradle_daemon.html#sec:disabling_the_daemon in the Gradle documentation.
Daemon will be stopped at the end of the build 

> Configure project :
The 'sonarqube' task depends on compile tasks. This behavior is now deprecated and will be removed in version 5.x. To avoid implicit compilation, set property 'sonar.gradle.skipCompile' to 'true' and make sure your project is compiled, before analysis has started.
The 'sonar' task depends on compile tasks. This behavior is now deprecated and will be removed in version 5.x. To avoid implicit compilation, set property 'sonar.gradle.skipCompile' to 'true' and make sure your project is compiled, before analysis has started.

> Task :core:compileJava
> Task :core:processResources NO-SOURCE
> Task :core:classes
> Task :core:compileTestJava
> Task :core:processTestResources NO-SOURCE
> Task :core:testClasses
OpenJDK 64-Bit Server VM warning: Sharing is only supported for boot loader classes because bootstrap classpath has been appended

> Task :core:test

CollectibleComponentTest > ShouldNotCollectWhenNotTouched PASSED

CollectibleComponentTest > ShouldNotCollectCurrency PASSED

CollectibleComponentTest > ShouldCollectCurrency PASSED

CollectibleComponentTest > ShouldNotCollectWhenYDifferenceTooLarge PASSED

EnemyBookDeckComponentTest > testEnemyBookDeckStats PASSED

HeroOneShotFormSwitchComponentTest > press1_ShouldApplyConfig1Values PASSED

HeroOneShotFormSwitchComponentTest > press2_ShouldApplyConfig2Values PASSED

HeroOneShotFormSwitchComponentTest > press3_ShouldApplyConfig3Values PASSED

HeroTurretAttackComponentTest > update_WhenCameraNull_OnlyReducesCooldownTimer PASSED

HeroTurretAttackComponentTest > damage_WithScaleAndFlatBonus_RoundedAndMin1 PASSED

HeroTurretAttackComponentTest > damage_NoModifiers_EqualsBase PASSED

HeroTurretAttackComponentTest > update_WhenTimerExpiredButCameraNull_DoesNotFireOrReset PASSED

HeroTurretAttackComponentTest > setters_ShouldBeChainableAndUpdateFields PASSED

SimplePlacementControllerTest > update_earlyReturns_whenInactive_orCameraNull PASSED

DestroyOnHitComponentTest > doesNothingOnNonTargetLayer PASSED

DestroyOnHitComponentTest > destroysOnTargetLayer PASSED

DestroyOnHitComponentTest > ignoresIfNotOurFixture PASSED

ProjectileComponentTest > expires_triggersStopPhysicsAndDestroy PASSED

ProjectileComponentTest > expires_withoutPhysics_isSafe PASSED

ProjectileComponentTest > create_appliesVelocityToBody PASSED

AITaskComponentTest > shouldRunNothingWithNoTask() PASSED

AITaskComponentTest > shouldRunSingleTask() PASSED

AITaskComponentTest > shouldNotRunNegativePriorityTask() PASSED

AITaskComponentTest > shouldStopTaskOnDispose() PASSED

AITaskComponentTest > shouldRunPriorityTask() PASSED

DefaultTaskTest > shouldHaveCorrectStatus() PASSED

ForestGameTest > shouldCreateWithoutErrors() PASSED

ForestGameTest > shouldSetAndRetainDifficulty() PASSED

ForestGameTest > shouldCreateForestGameArea() PASSED

ForestGameTest > shouldDisposeWithoutErrors() PASSED

ForestGameTest > shouldLoadAssets() PASSED

GameAreaTest > shouldSpawnEntities() PASSED

MapEditorTest > shouldCleanupWithoutErrors() PASSED

MapEditorTest > shouldHandleNullTerrain() PASSED

MapEditorTest > shouldGenerateEnemyPath() PASSED

MapEditorTest > shouldCreateMapEditor() PASSED

TerrainComponentTest > shouldConvertPositionHexagonal() PASSED

TerrainComponentTest > shouldConvertPositionIsometric() PASSED

TerrainComponentTest > shouldConvertPositionOrthogonal() PASSED

CombatStatsComponentTest > shouldAddHealth() PASSED

CombatStatsComponentTest > shouldSetGetHealth() PASSED

CombatStatsComponentTest > shouldSetGetBaseAttack() PASSED

CombatStatsComponentTest > shouldCheckIsDead() PASSED

ComponentTest > shouldNotUpdateIfDisabled() PASSED

ComponentTest > shouldUpdateIfEnabled() PASSED

ComponentTypeTest > shouldGiveUniqueIdPerClass() PASSED

ComponentTypeTest > shouldGiveSameIdForSameClass() PASSED

HomebaseDamageEffectComponentSimpleTest > shouldCheckForDamagedTextureAvailability() PASSED

HomebaseDamageEffectComponentSimpleTest > shouldReturnToNormalAfterDuration() PASSED

HomebaseDamageEffectComponentSimpleTest > shouldNotTriggerMultipleDamageEffectsSimultaneously() PASSED

HomebaseDamageEffectComponentSimpleTest > shouldNotBeShowingDamageEffectInitially() PASSED

HomebaseDamageEffectComponentSimpleTest > shouldPlayHitSoundOnDamage() PASSED

HomebaseDamageEffectComponentSimpleTest > shouldHaveCorrectDuration() PASSED

HomebaseDamageEffectComponentSimpleTest > shouldNotTriggerDamageEffectOnHealthIncrease() PASSED

HomebaseDamageEffectComponentSimpleTest > shouldCreateComponent() PASSED

HomebaseDamageEffectComponentSimpleTest > shouldTriggerDamageEffectOnHealthDecrease() PASSED

PlayerScoreComponentTest > resetScore() PASSED

PlayerScoreComponentTest > addZeroPoints() PASSED

PlayerScoreComponentTest > startsAtZero() PASSED

PlayerScoreComponentTest > addNegativePoints() PASSED

PlayerScoreComponentTest > addPositivePoints() PASSED

TouchAttackComponentTest > shouldAttack() PASSED

TouchAttackComponentTest > shouldNotAttackWithoutCombatComponent() PASSED

TouchAttackComponentTest > shouldNotAttackOtherLayer() PASSED

TowerComponentTest > canAttachTowerComponentToEntity() PASSED

TowerComponentTest > canCreateTowerComponent() PASSED

TowerStatsComponentTest > testGettersAndSetters() PASSED

TowerStatsComponentTest > testLevelIncrement() PASSED

TowerStatsComponentTest > testAttackTimer() PASSED

BackgroundMusicComponentTest > shouldChangeMusicWhenTriggered() PASSED

BackgroundMusicComponentTest > shouldResumeMusicWhenTriggered() PASSED

BackgroundMusicComponentTest > shouldNotPlayMusicWhenAudioServiceIsNull() PASSED

BackgroundMusicComponentTest > shouldPlayMusicWhenTriggered() PASSED

BackgroundMusicComponentTest > shouldPauseMusicWhenTriggered() PASSED

BackgroundMusicComponentTest > shouldStopMusicWhenTriggered() PASSED

SoundEffectComponentTest > shouldPlaySoundWhenTriggered() PASSED

SoundEffectComponentTest > shouldNotPlaySoundWhenAudioServiceIsNull() PASSED

SoundEffectComponentTest > shouldPlaySoundWithVolumeWhenTriggered() PASSED

BookComponentTest > testEnemyConfigLoad() PASSED

BookComponentTest > shouldGetEnemyDecks() PASSED

BookComponentTest > shouldGetEnemyTitle() PASSED

BookComponentTest > shouldGetCurrencyDecks() PASSED

BookComponentTest > shouldGetCurrencyTitle() PASSED

BookComponentTest > testTowerConfigLoad() PASSED

BookComponentTest > shouldGetTowerDecks() PASSED

BookComponentTest > shouldGetTowerTitle() PASSED

CurrencyComponentTest > shouldGetTypeMetalScrap() PASSED

CurrencyComponentTest > shouldGetValue5() PASSED

CurrencyComponentTest > shouldGetDisplayName() PASSED

CurrencyManagerComponentTest > shouldGetCurrencyAmount() PASSED

CurrencyManagerComponentTest > shouldDropCurrency() PASSED

CurrencyManagerComponentTest > shouldCollectCurrency() PASSED

CurrencyManagerComponentTest > shouldNotDeductCurrency() PASSED

CurrencyManagerComponentTest > shouldDeductCurrency() PASSED

CurrencyManagerComponentTest > shouldRefundCorrectly() PASSED

CurrencyManagerComponentTest > shouldNotDeductCurrency2() PASSED

CurrencyManagerComponentTest > shouldInitializeCurrenciesOnCreate() PASSED

CurrencyManagerComponentTest > shouldAddCurrencyEntity() PASSED

CurrencyManagerComponentTest > shouldGetCurrencyList() PASSED

CurrencyManagerComponentTest > shouldRefundCorrectly2() PASSED

CurrencyManagerComponentTest > shouldNotAddCurrencyEntityTwice() PASSED

CurrencyBookDeckComponentTest > testCurrencyBookDeckStats() PASSED

DeckComponentTest > getStats() PASSED

TowerBookDeckComponentTest > testTowerBookDeckStats() PASSED

HeroUltimateComponentDoubleDamageTest > walletCantAfford_ShouldNotActivate() PASSED

HeroUltimateComponentDoubleDamageTest > walletOk_ActivateThenExpire_ShouldRestoreDamage() PASSED

HeroUltimateComponentDoubleDamageTest > activateWithoutUpgrade_ShouldMultiplyDamage() PASSED

HeroUpgradeComponentTest > upgradeFail_whenNotEnoughCurrency_shouldTriggerUpgradeFailed() PASSED

HeroUpgradeComponentTest > upgradeFail_whenAtMaxLevel_shouldTriggerUpgradeFailed() PASSED

HeroUpgradeComponentTest > upgradeFail_whenWalletMissing_shouldTriggerUpgradeFailed_withoutServiceLocator() PASSED

HeroUpgradeComponentTest > upgradeSuccess_shouldDeductCost_applyGrowth_andTriggerUpgradedEvent() PASSED

HeroUpgradeComponentTest > attachPlayer_shouldCacheWalletReference() PASSED

HeroUpgradeWalletIntegrationTest > atMaxLevel_thirdUpgradeShouldFail_withMockWalletAlwaysAffordable() PASSED

HeroUpgradeWalletIntegrationTest > upgradeWhenNotEnoughFunds_shouldNotDeductAndShouldFailEvent() PASSED

HeroUpgradeWalletIntegrationTest > twoUpgradesSucceed_withSufficientFunds() PASSED

MainGameActionsSaveFlowTest > performSave_shouldGiveFeedback_andNotPause() PASSED

MainGameActionsSaveFlowTest > saveEvent_shouldOnlyShowSaveUI_andNotPause() PASSED

PauseInputComponentTest > otherKeysShouldBeIgnored() PASSED

PauseInputComponentTest > pKeyShouldTogglePause() PASSED

PauseInputComponentTest > escKeyShouldTogglePause() PASSED

MapSelectionDisplayTest > reflection_shouldAllowConstructorAccess() PASSED

MapSelectionDisplayTest > findMaps_shouldReturnList_whenCalledViaMock() PASSED

MapSelectionDisplayTest > declaredMethods_shouldIncludeExpectedOnes() PASSED

MapSelectionDisplayTest > class_shouldExistAndBeLoadable() PASSED

MapSelectionDisplayTest > ensureThumbLoaded_shouldBeCallableSymbolically() PASSED

MapSelectionScreenSmokeTest > constructor_shouldCreateWithoutThrowing() PASSED

MapSelectionScreenSmokeTest > newScreen_reflection_returnsMapSelectionScreen() PASSED

SaveSelectionDisplayTest > testSaveSelectionDisplayComponents() PASSED

SaveSelectionDisplayTest > testSaveSelectionDisplayCreation() PASSED

SaveSelectionDisplayTest > testSaveGameServiceCreation() PASSED

SaveSelectionDisplayTest > testSaveGameServiceMethods() PASSED

SaveSelectionDisplayTest > testSaveGameServiceWithNullEntityService() PASSED

InventoryComponentTest > shouldCheckHasGold() PASSED

InventoryComponentTest > shouldAddGold() PASSED

InventoryComponentTest > shouldSetGetGold() PASSED

SettingsMenuDisplayTest > testSettingsMenuCreation() PASSED

SettingsMenuDisplayTest > testDisplaySettings() PASSED

SettingsMenuDisplayTest > testSettingsMenuOverlayMode() PASSED

SettingsMenuDisplayTest > testSettingsMenuNonOverlayMode() PASSED

SettingsMenuDisplayTest > testUserSettingsDefaultValues() PASSED

SettingsMenuDisplayTest > testOverlayModeConstructor() PASSED

ChaseTaskTest > shouldMoveTowardsTarget() PASSED

ChaseTaskTest > shouldChaseOnlyWhenInDistance() PASSED

MovementTaskTest > shouldMoveOnStart() PASSED

MovementTaskTest > shouldStopWhenClose() PASSED

WaitTaskTest > shouldWaitUntilTime() PASSED

WanderTaskTest > shouldTriggerEvent() PASSED

JobSystemTest > shouldRunBlockingTask() PASSED

JobSystemTest > shouldRunTask() PASSED

EntityServiceTest > shouldCreateEntity() PASSED

EntityServiceTest > shouldNotUpdateUnregisteredEntities() PASSED

EntityServiceTest > shouldDisposeEntities() PASSED

EntityServiceTest > shouldUpdateEntities() PASSED

EntityTest > shouldNotUpdateIfDisabled() PASSED

EntityTest > shouldCreateComponents() PASSED

EntityTest > shouldSetAndGetPosition() PASSED

EntityTest > shouldEqualWithId() PASSED

EntityTest > shouldUpdateComponents() PASSED

EntityTest > shouldSetAndGetScale() PASSED

EntityTest > shouldDisposeComponents() PASSED

EntityTest > shouldHaveUniqueId() PASSED

EntityTest > shouldRejectAfterCreate() PASSED

EntityTest > shouldGetComponent() PASSED

EntityTest > shouldRejectSameClassComponents() PASSED

EntityTest > shouldNotGetMissingComponent() PASSED

EntityTest > shouldHaveCorrectCenter() PASSED

ObstacleFactoryBarrierTest > createBarrier_hasPhysicsCollider_andScaledBox() PASSED

ObstacleFactorySnowTreeTest > createSnowTree_hasPhysicsCollider_andScaledBox() PASSED

ObstacleFactoryTest > constructor_isPrivateAndThrows() PASSED

ObstacleFactoryTest > createWall_setsScaleAndHasPhysicsAndCollider() PASSED

PlayerFactoryBasementTest > basement_hasComponentsAndScaledCollider() PASSED

WeaknessAndResistanceTest > doesResistanceDecreaseDamage() PASSED

WeaknessAndResistanceTest > canChangeResistances() PASSED

WeaknessAndResistanceTest > canChangeWeaknesses() PASSED

WeaknessAndResistanceTest > doesWeaknessIncreaseDamage() PASSED

BossEnemyFactoryTest > bossEnemyDisplayNameSetAndGet() PASSED

BossEnemyFactoryTest > bossEnemyHasCorrectDifficulty() PASSED

BossEnemyFactoryTest > bossEnemyWeaknessSetAndGet() PASSED

BossEnemyFactoryTest > bossEnemyHasCorrectStats() PASSED

BossEnemyFactoryTest > bossEnemyResetsToDefaults() PASSED

BossEnemyFactoryTest > bossEnemyTexturePathSetAndGet() PASSED

BossEnemyFactoryTest > bossEnemySpeedSetAndGet() PASSED

BossEnemyFactoryTest > bossEnemyResistanceSetAndGet() PASSED

BossEnemyFactoryTest > bossEnemyDiesCorrectly() PASSED

BossEnemyFactoryTest > bossEnemyDeathPoints() PASSED

CurrencyFactoryTest > createCurrency() PASSED

DroneEnemyFactoryTest > droneEnemyTexturePathSetAndGet() PASSED

DroneEnemyFactoryTest > droneEnemyHasCorrectStats() PASSED

DroneEnemyFactoryTest > droneEnemyDiesCorrectly() PASSED

DroneEnemyFactoryTest > droneEnemyResistanceSetAndGet() PASSED

DroneEnemyFactoryTest > droneEnemyResetsToDefaults() PASSED

DroneEnemyFactoryTest > droneEnemySpeedSetAndGet() PASSED

DroneEnemyFactoryTest > droneEnemyWeaknessSetAndGet() PASSED

DroneEnemyFactoryTest > droneEnemyDisplayNameSetAndGet() PASSED

DroneEnemyFactoryTest > droneEnemyHasCorrectDifficulty() PASSED

DroneEnemyFactoryTest > droneEnemyDeathPoints() PASSED

GruntEnemyFactoryTest > gruntEnemyResetsToDefaults() PASSED

GruntEnemyFactoryTest > gruntEnemyHasCorrectStats() PASSED

GruntEnemyFactoryTest > gruntEnemySpeedSetAndGet() PASSED

GruntEnemyFactoryTest > gruntEnemyDisplayNameSetAndGet() PASSED

GruntEnemyFactoryTest > gruntEnemyHasCorrectDifficulty() PASSED

GruntEnemyFactoryTest > bossEnemyResistanceSetAndGet() PASSED

GruntEnemyFactoryTest > gruntEnemyDiesCorrectly() PASSED

GruntEnemyFactoryTest > gruntEnemyDeathPoints() PASSED

GruntEnemyFactoryTest > gruntEnemyWeaknessSetAndGet() PASSED

GruntEnemyFactoryTest > gruntEnemyTexturePathSetAndGet() PASSED

PlayerFactoryTest > playerHasScoreComponent() PASSED

TankFactoryTest > tankEnemyResistanceSetAndGet() PASSED

TankFactoryTest > tankEnemyResetsToDefaults() PASSED

TankFactoryTest > tankEnemyDeathPoints() PASSED

TankFactoryTest > tankEnemyDiesCorrectly() PASSED

TankFactoryTest > tankEnemyDisplayNameSetAndGet() PASSED

TankFactoryTest > tankEnemyHasCorrectDifficulty() PASSED

TankFactoryTest > tankEnemyWeaknessSetAndGet() PASSED

TankFactoryTest > tankEnemyHasCorrectStats() PASSED

TankFactoryTest > tankEnemySpeedSetAndGet() PASSED

TankFactoryTest > tankEnemyTexturePathSetAndGet() PASSED

EventHandlerTest > shouldTriggerEvent() PASSED

EventHandlerTest > shouldTriggerThreeArg() PASSED

EventHandlerTest > shouldHandleNoListeners() PASSED

EventHandlerTest > shouldTriggerCorrectEvent() PASSED

EventHandlerTest > shouldFailIncorrectArgs() PASSED

EventHandlerTest > shouldTriggerOneArg() PASSED

EventHandlerTest > shouldTriggerTwoArg() PASSED

EventHandlerTest > shouldTriggerMultiple() PASSED

FileLoaderTest > loadFromValidFile() PASSED

FileLoaderTest > loadFromInvalidFile() PASSED

FileLoaderTest > loadFromMissingFile() PASSED

FileLoaderTest > loadFromEmptyFile() PASSED

UserSettingsPersistenceTest > shouldPersistNewFields() PASSED

UserSettingsTest > shouldApplySettings() PASSED

UserSettingsTest > shouldFindMatchingDisplay() PASSED

InputComponentTest > shouldHandleTouchUp() PASSED

InputComponentTest > shouldHandleKeyDown() PASSED

InputComponentTest > shouldHandlePanStop() PASSED

InputComponentTest > shouldUpdatePriority() PASSED

InputComponentTest > shouldHandlePan() PASSED

InputComponentTest > shouldHandleTap() PASSED

InputComponentTest > shouldHandleScrolled() PASSED

InputComponentTest > shouldHandleMouseMoved() PASSED

InputComponentTest > shouldHandleTouchDragged() PASSED

InputComponentTest > shouldHandleLongPress() PASSED

InputComponentTest > shouldHandleTouchDown() PASSED

InputComponentTest > shouldHandleKeyTyped() PASSED

InputComponentTest > shouldHandleZoom() PASSED

InputComponentTest > shouldHandleTouchDownGesture() PASSED

InputComponentTest > shouldRegisterOnCreate() PASSED

InputComponentTest > shouldHandleFling() PASSED

InputComponentTest > shouldHandleKeyUp() PASSED

InputComponentTest > shouldHandlePinch() PASSED

InputDecoratorTest > shouldCallMouse() PASSED

InputDecoratorTest > shouldCallKeys() PASSED

InputDecoratorTest > shouldcallTouch() PASSED

InputFactoryTest > shouldGiveKeyboardFactoryType() PASSED

InputFactoryTest > shouldGiveNoFactory() PASSED

InputServiceTest > shouldHandleTouchUp() PASSED

InputServiceTest > shouldHandleKeyDown() PASSED

InputServiceTest > shouldHandlePanStop() PASSED

InputServiceTest > shouldRegisterInputHandler() PASSED

InputServiceTest > shouldHandlePan() PASSED

InputServiceTest > shouldHandleTap() PASSED

InputServiceTest > shouldHandleScrolled() PASSED

InputServiceTest > shouldHandleMouseMoved() PASSED

InputServiceTest > shouldHandleTouchDragged() PASSED

InputServiceTest > shouldHandleLongPress() PASSED

InputServiceTest > shouldHandleTouchDown() PASSED

InputServiceTest > shouldHandleKeyTyped() PASSED

InputServiceTest > shouldHandleZoom() PASSED

InputServiceTest > shouldHandleTouchDownGesture() PASSED

InputServiceTest > shouldUnregisterInputHandler() PASSED

InputServiceTest > shouldHandleFling() PASSED

InputServiceTest > shouldHandleKeyUp() PASSED

InputServiceTest > shouldHandlePinch() PASSED

KeyboardInputFactoryTest > shouldReturnKeyboardPlayerInput() PASSED

AudioIntegrationTest > shouldHandleVolumeChanges() PASSED

AudioIntegrationTest > shouldIntegrateSoundEffectFlow() PASSED

AudioIntegrationTest > shouldIntegrateBackgroundMusicFlow() PASSED

AudioIntegrationTest > shouldHandleMultipleEntitiesWithAudio() PASSED

AudioIntegrationTest > shouldHandleSettingsIntegration() PASSED

AudioIntegrationTest > shouldHandleMusicTransitions() PASSED

AudioIntegrationTest > shouldHandleDisabledAudio() PASSED

ColliderComponentTest > shouldSetBox() PASSED

ColliderComponentTest > shouldSetDensity() PASSED

ColliderComponentTest > shouldSetSensor() PASSED

ColliderComponentTest > shouldSetRestitution() PASSED

ColliderComponentTest > shouldSetShape() PASSED

ColliderComponentTest > shouldSetAligned() PASSED

ColliderComponentTest > shouldSetFriction() PASSED

HitboxComponentTest > shouldBeSensor() PASSED

PhysicsComponentTest > shouldMoveEntityToBody() PASSED

PhysicsComponentTest > shouldBecomeActiveOnCreate() PASSED

PhysicsContactListenerTest > shouldTriggerCollisionStart() PASSED

PhysicsContactListenerTest > shouldTriggerCollisionEnd() PASSED

PhysicsEngineTest > shouldDisposeWorld() PASSED

PhysicsEngineTest > shouldCreateJoint() PASSED

PhysicsEngineTest > shouldCreateBody() PASSED

PhysicsEngineTest > shouldStepMultipleAfterLongTime() PASSED

PhysicsEngineTest > shouldStepOnceAfterTime() PASSED

PhysicsEngineTest > shouldNotStepWithoutEnoughTime() PASSED

PhysicsServiceTest > shouldGetSetEngine() PASSED

PhysicsUtilsTest > shouldScaleBigCollider() PASSED

PhysicsUtilsTest > shouldScaleHalfCollider() PASSED

PhysicsUtilsTest > shouldScaleFullCollider() PASSED

AnimationRenderComponentTest > shouldAddRemoveAnimation() PASSED

AnimationRenderComponentTest > shouldFailDuplicateAddAnimation() PASSED

AnimationRenderComponentTest > shouldFinish() PASSED

AnimationRenderComponentTest > shouldPlayAnimation() PASSED

AnimationRenderComponentTest > shouldHaveAnimation() PASSED

AnimationRenderComponentTest > shouldFailRemoveInvalidAnimation() PASSED

AnimationRenderComponentTest > shouldStopAnimation() PASSED

DebugRendererTest > shouldNotRenderWhenDisabled() PASSED

DebugRendererTest > shouldRenderLine() PASSED

DebugRendererTest > shouldRenderRect() PASSED

DebugRendererTest > shouldRenderPhysics() PASSED

RenderComponentTest > shouldDrawOnRender() PASSED

RenderComponentTest > shouldUnregisterOnDispose() PASSED

RenderComponentTest > shouldRegisterSelf() PASSED

RenderComponentTest > shouldGiveCorrectRenderOrder() PASSED

RenderServiceTest > shouldRender() PASSED

RenderServiceTest > shouldRenderInZIndexOrder() PASSED

RenderServiceTest > shouldNotRenderAfterUnregister() PASSED

RenderServiceTest > shouldRenderInLayerOrder() PASSED

RendererTest > shouldRender() PASSED

RendererTest > shouldResizeCamera() PASSED

RendererTest > shouldResizeViewPort() PASSED

RotatingTextureRenderComponentTest > testDrawCallsBatchDraw() PASSED

RotatingTextureRenderComponentTest > testSetAndGetRotation() PASSED

TextureRenderComponentTest > shouldDrawTexture() PASSED

GameOverScreenTest > testDraw() PASSED

GameOverScreenTest > testMultipleDispose() PASSED

GameOverScreenTest > testMultipleAddActors() PASSED

GameOverScreenTest > testResourceLoadingFailure() PASSED

GameOverScreenTest > testMultipleInstances() PASSED

GameOverScreenTest > testAddActors() PASSED

GameOverScreenTest > testButtonStyleCreation() PASSED

GameOverScreenTest > testBackgroundImageLoading() PASSED

GameOverScreenTest > testResourceLoading() PASSED

GameOverScreenTest > testNullEntity() PASSED

GameOverScreenTest > testButtonCreation() PASSED

GameOverScreenTest > testCreate() PASSED

GameOverScreenTest > testDispose() PASSED

GameOverScreenTest > testEntityEvents() PASSED

GameOverScreenTest > testGetZIndex() PASSED

GameOverScreenTest > testComponentLifecycle() PASSED

OpeningCutsceneScreenTest > testOpeningCutsceneScreenCreation() PASSED

OpeningCutsceneScreenTest > testWithBackgroundStaticMethod() PASSED

VictoryScreenTest > testVictoryScreenCreation() PASSED

AudioServiceTest > shouldClampMusicVolume() PASSED

AudioServiceTest > shouldDisposeResources() PASSED

AudioServiceTest > shouldPauseMusic() PASSED

AudioServiceTest > shouldSetSoundVolume() PASSED

AudioServiceTest > shouldNotPlayNonexistentMusic() PASSED

AudioServiceTest > shouldNotPlayNonexistentSound() PASSED

AudioServiceTest > shouldStopPreviousMusicWhenPlayingNew() PASSED

AudioServiceTest > shouldClampSoundVolume() PASSED

AudioServiceTest > shouldNotFailWhenPausingOrResumingWithNoMusic() PASSED

AudioServiceTest > shouldNotPlaySoundWhenDisabled() PASSED

AudioServiceTest > shouldResumeMusic() PASSED

AudioServiceTest > shouldStopMusic() PASSED

AudioServiceTest > shouldToggleSoundEnabled() PASSED

AudioServiceTest > shouldRegisterMusic() PASSED

AudioServiceTest > shouldRegisterSound() PASSED

AudioServiceTest > shouldPlayMusic() PASSED

AudioServiceTest > shouldPlaySound() PASSED

AudioServiceTest > shouldToggleMusicEnabled() PASSED

AudioServiceTest > shouldNotPlayMusicWhenDisabled() PASSED

AudioServiceTest > shouldSetMusicVolume() PASSED

GameScoreServiceIntegrationTest > testScoreCalculationWithoutKills() PASSED

GameScoreServiceIntegrationTest > testCurrentGameScore() PASSED

GameScoreServiceIntegrationTest > testScoreCalculationWithKills() PASSED

GameStateServiceTest > shouldGet() PASSED

GameStateServiceTest > shouldSet() PASSED

GameStateServiceTest > multipleIncrement() PASSED

GameStateServiceTest > shouldIncrement() PASSED

GameTimeTest > shouldGiveCorrectDelta() PASSED

GameTimeTest > shouldScaleToZero() PASSED

GameTimeTest > shouldScaleDown() PASSED

GameTimeTest > shouldScaleUp() PASSED

ResourceServiceTest > shouldLoadTextures() PASSED

ResourceServiceTest > shouldLoadTextureAtlases() PASSED

ResourceServiceTest > shouldLoadSounds() PASSED

ResourceServiceTest > loadForMillisShouldLoadAssets() PASSED

ResourceServiceTest > shouldLoadMusic() PASSED

ResourceServiceTest > loadAllShouldLoadUnloadAssets() PASSED

ResourceServiceTest > shouldContainAndGetAssets() PASSED

ServiceLocatorTest > shouldGetSetServices() PASSED

KeyboardTerminalInputComponentTest > shouldToggleTerminalOpenClose() PASSED

KeyboardTerminalInputComponentTest > shouldUpdateMessageOnKeyTyped() PASSED

KeyboardTerminalInputComponentTest > shouldHandleMessageWhenTerminalOpen() PASSED

TerminalTest > shouldModifyEnteredMessage() PASSED

TerminalTest > shouldToggleIsOpen() PASSED

TerminalTest > shouldSetOpenClosed() PASSED

TerminalTest > shouldProcessMessageMultipleArgs() PASSED

TerminalTest > shouldAddCommand() PASSED

TerminalTest > shouldProcessMessageNoArgs() PASSED

TouchTerminalInputComponentTest > shouldUpdateMessageOnKeyTyped() PASSED

TouchTerminalInputComponentTest > shouldSetTerminalOpenClose() PASSED

TouchTerminalInputComponentTest > shouldHandleMessageWhenTerminalOpen() PASSED

SortedIntMapTest > shouldContains() PASSED

SortedIntMapTest > shouldClear() PASSED

SortedIntMapTest > shouldPutGetCorrectly() PASSED

StringDecoratorTest > shouldReturnGivenString() PASSED

StringDecoratorTest > shouldPassCorrectObject() PASSED

> Task :core:jacocoTestReport

BUILD SUCCESSFUL in 17s
4 actionable tasks: 4 executed
